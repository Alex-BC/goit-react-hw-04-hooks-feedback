{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","namesOfItems","Object","keys","className","s","list","map","item","onClick","button","name","slice","toUpperCase","toLowerCase","Statistics","good","neutral","bad","total","positivePercentage","statisticList","Notification","message","text","App","useState","setGood","setNeutral","setBad","feedback","countTotalFeedback","values","reduce","acc","Error","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAC3CC,EAAeC,OAAOC,KAAKJ,GAMjC,OACE,oBAAIK,UAAWC,IAAEC,KAAjB,SACGL,EAAaM,KAAI,SAACC,GAAD,OAChB,6BACE,yBAAQC,QAAS,kBAAMT,EAAgBQ,IAAOJ,UAAWC,IAAEK,OAA3D,WARgBC,EASCH,EARjB,GAAN,OAAUG,EAAKC,MAAM,EAAG,GAAGC,eAA3B,OAA2CF,EAAKC,MAAM,GAAGE,gBAQ3B,QAFjBN,GAPQ,IAACG,O,oBCHX,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC9D,OACE,qBAAIhB,UAAWC,IAAEgB,cAAjB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,Y,oBChBO,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGnB,UAAWC,IAAEmB,KAAhB,SAAuBD,ICEjB,SAASE,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBV,EADqB,KACfW,EADe,OAEED,mBAAS,GAFX,mBAErBT,EAFqB,KAEZW,EAFY,OAGNF,mBAAS,GAHH,mBAGrBR,EAHqB,KAGhBW,EAHgB,KAKtBC,EAAW,CAAEd,OAAMC,UAASC,OAkB5Ba,EAAqB,WACzB,OAAO7B,OAAO8B,OAAOF,GAAUG,QAAO,SAACC,EAAK1B,GAAN,OAAe0B,EAAM1B,IAAM,IAQjE,OACE,qCACE,cAACb,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS+B,EACT9B,gBA9BY,SAAAQ,GACpB,OAAQA,GACN,IAAK,OACH,OAAOmB,EAAQX,EAAO,GAExB,IAAK,UACH,OAAOY,EAAWX,EAAU,GAE9B,IAAK,MACH,OAAOY,EAAOX,EAAM,GAEtB,QACE,MAAM,IAAIiB,MAAM,+BAqBhB,cAACxC,EAAD,CAASC,MAAM,aAAf,SAC4B,IAAzBmC,IACC,cAACT,EAAD,CAAcC,QAAQ,sBAEtB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,IACPX,mBArBHgB,KAAKC,MAAc,IAAPrB,EAAce,YC9BrCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,OAAS,kC,kBCAhED,EAAOC,QAAU,CAAC,cAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.e1113ca6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback}) {\r\n  const namesOfItems = Object.keys(options);\r\n\r\n   const getNameOfItem = (name) => {\r\n    return `${name.slice(0, 1).toUpperCase()}${name.slice(1).toLowerCase()}`;\r\n  };\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {namesOfItems.map((item) => (\r\n        <li key={item}>\r\n          <button onClick={() => onLeaveFeedback(item)} className={s.button}>\r\n            {getNameOfItem(item)}{\" \"}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nexport default function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <li>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li>\r\n        <p>Positive feedback: {positivePercentage}%</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.text}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\n","import { useState } from \"react\";\r\nimport Section from \"../Section/Section.jsx\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions.jsx\";\r\nimport Statistics from \"../Statistics/Statistics.jsx\";\r\nimport Notification from \"../Notification/Notification.jsx\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const feedback = { good, neutral, bad };\r\n\r\n  const setActiveItem = item => {\r\n    switch (item) {\r\n      case 'good':\r\n        return setGood(good + 1);\r\n\r\n      case 'neutral':\r\n        return setNeutral(neutral + 1);\r\n\r\n      case 'bad':\r\n        return setBad(bad + 1);\r\n\r\n      default:\r\n        throw new Error('Something went wrong!');\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    return Object.values(feedback).reduce((acc, item) => acc + item, 0);\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return Math.round((good * 100) / countTotalFeedback());\r\n  };\r\n\r\n  \r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={feedback}\r\n            onLeaveFeedback={setActiveItem}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\"></Notification>\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__1LgwT\",\"button\":\"FeedbackOptions_button__tN9K9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__1C46p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1BylW\"};"],"sourceRoot":""}